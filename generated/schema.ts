// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Token extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));

    this.set("tokenId", Value.fromBigInt(BigInt.zero()));
    this.set("owner", Value.fromBytes(Bytes.empty()));
    this.set("_tokenName", Value.fromString(""));
    this.set("_price", Value.fromBigInt(BigInt.zero()));
    this.set("_tokenURI", Value.fromString(""));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save Token entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        "Cannot save Token entity with non-string ID. " +
          'Considering using .toHex() to convert the "id" to a string.'
      );
      store.set("Token", id.toString(), this);
    }
  }

  static load(id: string): Token | null {
    return changetype<Token | null>(store.get("Token", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get tokenId(): BigInt {
    let value = this.get("tokenId");
    return value!.toBigInt();
  }

  set tokenId(value: BigInt) {
    this.set("tokenId", Value.fromBigInt(value));
  }

  get owner(): Bytes {
    let value = this.get("owner");
    return value!.toBytes();
  }

  set owner(value: Bytes) {
    this.set("owner", Value.fromBytes(value));
  }

  get _tokenName(): string {
    let value = this.get("_tokenName");
    return value!.toString();
  }

  set _tokenName(value: string) {
    this.set("_tokenName", Value.fromString(value));
  }

  get _price(): BigInt {
    let value = this.get("_price");
    return value!.toBigInt();
  }

  set _price(value: BigInt) {
    this.set("_price", Value.fromBigInt(value));
  }

  get _tokenURI(): string {
    let value = this.get("_tokenURI");
    return value!.toString();
  }

  set _tokenURI(value: string) {
    this.set("_tokenURI", Value.fromString(value));
  }
}
